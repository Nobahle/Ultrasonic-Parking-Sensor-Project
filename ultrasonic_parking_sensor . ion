const int trig = 12;
const int echo = 13;


const int LED1 = 7;
const int LED2= 6;
const int LED3 = 5;
const int LED4 = 4;
const int LED5 = 3;
const int LED6 = 2;

int duration = 0;
int distance = 0;

void setup()
{
  pinMode(trig, OUTPUT);
  pinMode(echo, INPUT);
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(LED3, OUTPUT);
  pinMode(LED4, OUTPUT);
  pinMode(LED5, OUTPUT);
  pinMode(LED6, OUTPUT);
  pinMode(LED7, OUTPUT);
  Serial.begin(9600);
}


void loop()
{
  digitalWrite(trig, HIGH);
  delayMicroseconds(10);  // Changed to 10 microseconds for a typical HC-SR04 trigger
  digitalWrite(trig, LOW);

  duration = pulseIn(echo, HIGH);
  distance = (duration / 2) / 29.1;  // Changed to 29.1 for a typical HC-SR04

  Serial.println(distance);

  if (distance <= 0)
  {
    digitalWrite(LED1, HIGH);
  }
  else
  {
    digitalWrite(LED1, LOW);
  }

  if (distance <= 5)
  {
    digitalWrite(LED2, HIGH);
  }
  else
  {
    digitalWrite(LED2, LOW);
  }  

  if (distance <= 10)
  {
    digitalWrite(LED3, HIGH);
  }
  else
  {
    digitalWrite(LED3, LOW);
  }

  if (distance <= 15)
  {
    digitalWrite(LED4, HIGH);
  }
  else
  {
    digitalWrite(LED4, LOW);
  }    

  if (distance <= 20)
  {
    digitalWrite(LED5, HIGH);
  }
  else
  {
    digitalWrite(LED5, LOW);
  }

  if (distance <= 25)
  {
    digitalWrite(LED6, HIGH);
  }
  else
  {
    digitalWrite(LED6, LOW);
  }    

 
}
//initial commit of ultrasonic parking sensor code
